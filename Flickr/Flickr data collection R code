#####################################################################
#In the reaearch                                                    #
#The libraries used in the RStudio 1.3.1073 are                     #
#‘photosearcher 1.0’, ‘Rcurl 1.98.1.3’,‘rjson 0.2.20’,              #
#‘sp 1.4.5’, ‘maptools 1.1.1’, ‘installr 0.22.0’, ‘devtools 2.4.0’, #
#‘rgdal 1.5.23’, ‘sf 0.9.8’, and ‘raster 3.4.5’ version.            #
#####################################################################
install.packages("installr") # only for the first launch/time
library(installr)

install.packages("devtools") # only for the first launch
library(devtools)

install.packages("rgdal") # only for the first launch
library(rgdal)

install.packages("sf") # only for the first launch
library(sf)

install.packages("rjson")
library(rjson)

install.packages("sp")
library(sp)

install.packages("RCurl") # only for the first launch/time
library(RCurl)

install.packages("maptools")
library(maptools)

install.packages("raster")
library(raster)

install_github("ropensci/photosearcher") # only for the first launch
library(photosearcher)

getwd()

#Lake Tana Biosphere Reserve
write.table("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", file = "photosearcher_key.sysdata") #write a table with your key
biosphere = readOGR(dsn =  ".", "biospherereserve", encoding = 'ESRI') # the boundaries of the Region of Interest
ROI = st_as_sf(biosphere) # tranform the loaded map into a sf object, which the format the photo_searcher function "understands" it
plot(biosphere) # plot to check

# the following function is the main function of this work. It downloads from FLICKR a list of photographs uploaded 
#to FLICKR and taken within the boundaries of the Region of Interest

output_points = photo_search(
  mindate_taken = "2016-01-01",
  maxdate_taken = "2020-12-31",
  has_geo = T,
  sf_layer = ROI,
  tags_any = FALSE
)

str(output_points) #check columns and data

myvars <- names(output_points) %in% c("tags", "description") # select not needed columns
output <- output_points[!myvars] # drop not needed columns
str(output) # check output

#write to csv file and load in GIS
write.csv(output, "biosphere_2016_2020.csv", row.names = F)

